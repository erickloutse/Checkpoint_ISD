ALGORITHM problem_1
VAR
    tab1 : enssemble_1 INTEGER[4];
    tab2 : enssemble_2 INTEGER[5];
    i,j,somme : INTEGER;
BEGIN 
    somme<- 0;
    tab1:={3,1,7,9};
    tab2:={2,4,1,9,3} 
    FOR i = 0; i<tab1.length; i++ DO
        FOR j = 0; j<tab2.length; j++ DO
            IF (tab1[i] <> tab2[j]) THEN
            somme = tab1[i]
            END_IF
        END_FOR
    END_FOR
    FOR j = 0; j<tab2.length; j++ DO
        FOR i = 0; i<tab1.length; i++ DO
            IF (tab2[j] <> tab1[i]) THEN
            somme = tab2[j]
            END_IF
        END_FOR
    END_FOR
    Write(somme)
END

ALGORITHM Produit scalaire
PROCEDURE dot_product(v1,v2)
VAR
    i : INTEGER
    ps : FLOAT
BEGIN
    FOR i = 0 TO n  DO
        Write(i+1)
        Read(v1(i))
        Write(i+1)
        Read(v2(i))
    END_FOR
    ps = 0
    FOR i = 0 TO n  DO
        ps = ps + v1(i)* v2(i)
    END_FOR
    Write(ps)
    IF (ps=0) THEN
        Write("Vecteur orthogonaux")
    ELSE
        Write("Vecteur non orthogonaux")
    END_IF
END

FUNCTION dot_product(v1[n] :INTEGER, v2[n] :INTEGER) : FLOAT
VAR
    i : INTEGER
    ps : FLOAT
BEGIN
    FOR i = 0 TO n  DO
        Write(i+1)
        Read(v1(i))
        Write(i+1)
        Read(v2(i))
    END_FOR
    ps = 0
    FOR i = 0 TO n  DO
        ps = ps + v1(i)* v2(i)
    END_FOR
    RETURN ps ;
    IF (dot_product(v1,v2)=0) THEN
        Write("Vecteur orthogonaux");
    ELSE
        Write("Vecteur non orthogonaux"); 
    END_IF
END 